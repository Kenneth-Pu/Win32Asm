;窗口程序的运行过程
;1.得到应用程序的句柄（GetModuleHandle）
;2.注册窗口类（RegisterClassEx）。在注册之前，先填写RegisterClassEx的参数WNDCLASSEX结构。
;3.建立窗口（CreateWindowEx）
;4.显示窗口（ShowWindow）
;5.刷新窗口客户区（UpdateWindow）
;6.进入无线的消息获取和处理的循环。首先获取消息（GetMessage），如果有消息到达，则将消息分派到回调函数处理（DispatchMessage），
;如果消息是WM_QUIT，则退出循环。
;所有用户的操作都是通过消息来传递给应用程序的，应用程序中由窗口过程接收消息并处理。
;Windows在系统内部有一个系统消息队列
;Windows为每个程序（严格的说是每个线程）维护一个消息队列
;Windows检查系统消息队列里消息的发生位置，当位置位于某个应用程序的窗口范围内的时候，就把这个消息派送到应用程序的消息队列。
;当应用程序还没有来取消息的时候，消息就暂时保留在消息队列里，当程序中的消息循环执行到GetMessage的时候，控制权转移到GetMessage所在
;的USER32.DLL中，USER32.DLL从程序消息队列取出一条消息,然后把这条消息返回到应用程序。
;应用程序可以对这条消息进行预处理。TranslateMessage把基于键盘扫描码的按键消息转换成基于ASCII码的键盘消息。
;TranslateAccelerator把键盘快捷键消息转换成命令消息。
;然后应用程序将处理这条消息，但方法不是自己直接调用窗口过程来完成，而是通过DispatchMessage间接调用窗口过程。
;当控制权转移到USER32.DLL中的DispatchMessage时，DispatchMessage找到消息对应窗口的窗口过程，然后把消息的具体信息当做参数
;来调用他，窗口过程根据消息找到对应的分支去处理，然后返回，这时控制权回到DispatchMessage，最后DispatchMessage函数返回应用程序。
;PostMessage是把一个消息放到其他程序的消息队列中，目标程序收到这条消息就把它放入该程序的消息队列去处理。
;SendMessage是越过消息队列直接调用目标程序的窗口过程，窗口过程返回以后才从SendMessage返回。
;窗口过程是由Windows回调的，在调用RegisterClassEx函数的时候把窗口过程的地址告诉了Windows。
